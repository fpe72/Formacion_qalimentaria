// backend/controllers/stripeWebhook.js
const Stripe = require('stripe');
const CompanyCode = require('../models/CompanyCode');
const nodemailer = require('nodemailer');

const stripe = new Stripe(process.env.STRIPE_SECRET_KEY);

exports.handleStripeWebhook = async (req, res) => {
  try {
    console.log('üì¶ Tipo real de req.body:', typeof req.body);
    console.log('üì¶ Contenido de req.body:', req.body);

    const event = stripe.webhooks.constructEvent(
      req.body.toString('utf8'),
      req.headers['stripe-signature'],
      process.env.STRIPE_WEBHOOK_SECRET
    );

    console.log('‚úÖ Evento recibido de Stripe:', event?.type);

    if (
      event?.type === 'checkout.session.completed' &&
      event?.data?.object?.customer_email
    ) {

      const session = event.data.object;
      const email = session.customer_email;
    
      console.log('üìß Email recibido:', email);
    
      // Verificar si ya existe un c√≥digo activo para este email
      const existingCode = await CompanyCode.findOne({ email, active: true });
    
      if (existingCode) {
        console.warn(`‚ö†Ô∏è Ya existe un c√≥digo activo para el email ${email}, se omite la creaci√≥n.`);
        return res.status(200).send(); // OK para Stripe
      }
    
      // Generar c√≥digo
      const randomSuffix = Math.random().toString(36).substring(2, 8).toUpperCase();
      const code = `PARTICULAR-${randomSuffix}`;
    
      const newCode = new CompanyCode({
        code,
        active: true,
        createdByStripe: true, 
        email,
        usedUsers: 0, // ‚úÖ corregido correctamente
        expiresAt: new Date(Date.now() + 90 * 24 * 60 * 60 * 1000),
        maxUsers: 1,
        formationType: 'b√°sica',
        company: '67fa5f2950aafe5edec6aa17',
    });
        
      await newCode.save();
      console.log('‚úÖ Guardado en MongoDB:', newCode);
    
      // Enviar email (aunque falle, no duplicar√° c√≥digo)
      const transporter = nodemailer.createTransport({
        service: 'gmail',
        auth: {
          user: process.env.EMAIL_USER,
          pass: process.env.EMAIL_PASS,
        },
      });
    
      const mailOptions = {
        from: `"Formaci√≥n Qalimentaria" <${process.env.EMAIL_USER}>`,
        to: email,
        subject: 'Tu c√≥digo de activaci√≥n',
        html: `<p>Hola,</p>
               <p>Gracias por tu compra. Aqu√≠ tienes tu <strong>c√≥digo de activaci√≥n</strong>:</p>
               <h2>${code}</h2>
               <p>√ösalo para completar tu registro en <a href="https://formacionqalimentaria.com">Formaci√≥n Qalimentaria</a>.</p>
               <p>Un saludo,<br>El equipo de Formaci√≥n Qalimentaria</p>`,
      };
    
      await transporter.sendMail(mailOptions);
      console.log(`‚úÖ C√≥digo enviado a ${email}: ${code}`);
    

    } else {
      console.warn(`‚ö†Ô∏è Evento ignorado: ${event?.type}`);
    }

    return res.status(200).json({ received: true });
  } catch (err) {
    console.error('‚ùå Error al procesar el webhook:', err.message);
    return res.status(400).send(`Webhook Error: ${err.message}`);
  }
};
